//Задание 1
//Программа получает на вход последовательность целых неотрицательных чисел,
//каждое число отделено пробелом. Последовательность завершается числом 0,
//при считывании которого программа должна закончить свою работу.
//Выведите наименьший и наибольший элемент данной последовательности
//Тестовые данные       Ожидаемый результат
//1 2 -3 4 -5 0					-5 4
//1 9 -3 -3 2 1	0				-3 9
//1 2 5 4 3 5 4 5 0			1 5


//#include <iostream>
//using namespace std;
//
//int main() {
//	int a;
//	int min = 0;
//	int max = 0;
//	while (true)
//	{
//		cin >> a;
//		if (a == 0) break;
//		min = (a < min) ? a : min;
//		max = (a > max) ? a : max;
//	}
//	cout << min << " " << max;
//	while (1);
//}




//Задание 2
//Программа получает на вход последовательность целых неотрицательных чисел,
//каждое число отделено пробелом. Последовательность завершается числом 0,
//при считывании которого программа должна закончить свою работу.
//Определите, какое количество элементов этой последовательности, равны ее наибольшему элементу.
//Формат входных данных
//Вводится последовательность натуральных чисел, оканчивающаяся числом 0
//(само число 0 в последовательность не входит, а служит как признак ее окончания).
//Тестовые данные				Ожидаемый результат
//1 2 3 4 5 0					  1
//1 2 3 3 2 1	0				  2
//1 2 5 4 3 5 4 5 0			3

//#include <iostream>
//using namespace std;
//
//int main() {
//	int a;
//	int max = 0;
//	int counter = 0;
//	while (true)
//	{
//		cin >> a;
//		if (a == 0) break;
//		if (a == max) ++counter;
//		else
//		{
//			if (a > max)
//			{
//				max = a;
//				counter = 1;
//			}
//		}
//	}
//	cout << counter;
//	while (1);
//}


//Задание 3
//Дано целое неотрицательное число N.
//Найти число, составленное теми же десятичными цифрами, что и N, но в обратном порядке.
//Тестовые данные				Ожидаемый результат
//1234						      4321
//5555						      5555
//15							      51
//987654321					    123456789

//#include <iostream>
//
//using namespace std;
//
//int main() {
//
//	int a,y; cin >> a;
//	while (a) {
//		cout << a % 10;
//		a /= 10;
//	}
//
//	while (1);
//	return 0;
//}

//Задание 4
//Найдите минимальную степень двойки, превосходящую заданное число.
//Тестовые данные				Ожидаемый результат
//1							        2
//2							        4
//15							      16
//100							      128


//#include <iostream>
//using namespace std;
//
//int main() {
//
//	int a; cin >> a;
//	int temp = 1;
//	int counter = 1;
//	while (a >= temp) {
//		temp *= 2;
//	}
//	cout << temp;
//	while (1);
//	return 0;
//}


//Задание 5
//Последовательность Фибоначчи определяется так:
//F(0) = 0, F(1) = 1, …, F(n) = F(n-1) + F(n-2).
//По данному числу N определите N-е число Фибоначчи F(N).
//Тестовые данные				Ожидаемый результат
//0							        0
//1							        1
//2							        1
//3							        2
//4							        3
//6							        8
//10							      55
//25							      75025


#include <iostream>
using namespace std;


int Fib(int i) {
	if (i < 1) return 0;
	if (i == 1) return 1;
return Fib(i - 1) + Fib(i - 2);
}
int main() {
	int counter; cin >> counter;
	int a = 0;
	while (a<counter) {
		Fib(a);
		a++;
	}
	cout << Fib(a);
	while (1);
	return 0;
}


//Задание 6 (дополнительное)
//Элемент последовательности называется локальным максимумом,
//если он строго больше предыдущего и последующего элемента последовательности.
//Первый и последний элемент последовательности не являются локальными максимумами.
//Дана последовательность натуральных чисел, завершающаяся числом 0.
//Определите количество строгих локальных максимумов в этой последовательности.
//Формат входных данных
//Вводится последовательность натуральных чисел, оканчивающаяся числом 0
//(само число 0 в последовательность не входит, а служит как признак ее окончания).
//Тестовые данные				Ожидаемый результат
//1 2 3 2 1 0					  1
//1 2 2 1 0					    0
//1 3 5 4 4 6 1 0				2
//1 9 8 7 7 8 5 9 0			2
